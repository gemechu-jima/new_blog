// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
enum Role {
  ADMIN
  USER
}
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String?
  password  String
  image     String?
  blogs      Blog[]
  role       Role     @default(USER)
  permission Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  title        String
  content      String
  introduction String
  images       String[]
  link         String
  author       String?
  User         User?    @relation(fields: [userId], references: [id])
  published    Boolean? @default(false)
  userId       String?  @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


""
// lib/prisma.ts
import { PrismaClient } from '@prisma/client'

const globalForPrisma = globalThis as unknown as {
  prisma: PrismaClient | undefined
}

const  prisma =
  globalForPrisma.prisma ??
  new PrismaClient({
    log: ['query'],
  })

if (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma
 export default prisma